on:
  push:
    branches: [main]

env:
  AWS_REGION: "ap-northeast-2"     

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name : Build front
        run: |
          npm install
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get image tag(version)
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-5)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: front-app
          IMAGE_TAG: ${{ steps.image.ouputs.version }}
        run: |
          echo "::set-output name=ecr_repository::$ECR_REPOSITORY"
          echo "::set-output name=image_tag::$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}   
      image_tag: ${{ steps.image.outputs.version }}
      sha: ${{ github.sha }}

  deploy:
    needs: build
    name: apply docker image tag to frontend deployment manifest
    runs-on: ubuntu-latest
    env :
      IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
      GIT_ACCESS_TOKEN: ${{ secrets.ACTION_TOKEN }}
      HASH: ${{ needs.build.outputs.sha }}
      GIT_REPO: twinholic2/oshyun-manifest-repo

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GIT_REPO }}
          ref: 'main'
          token: ${{ env.GIT_ACCESS_TOKEN }}   
          
      - name: Set foobar to cool
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag = "${{ env.IMAGE_TAG }}"' values.yaml    
   
